{
  "extends": ["react-app", "airbnb"],
  "plugins": ["jsx-a11y", "prettier", "simple-import-sort"],
  "ignorePatterns": ["service-worker.ts", "serviceWorkerRegistration.ts", "**/*.d.ts"],
  "globals": {
    "React": true,
    "google": true,
    "mount": true,
    "mountWithRouter": true,
    "shallow": true,
    "shallowWithRouter": true,
    "context": true,
    "expect": true,
    "jsdom": true,
    "JSX": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    }
  },
  "rules": {
    "import/no-named-as-default": "off",
    "no-shadow": "off",
    "no-plusplus": "off",
    "no-param-reassign": "off",
    "import/prefer-default-export": "off",
    "import/no-extraneous-dependencies": "off",
    "import/no-cycle": "off",
    "import/extensions": "off",
    "import/no-anonymous-default-export": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Node.js builtins. You could also generate this regex if you use a `.js` config.
          // For example: `^(${require("module").builtinModules.join("|")})(/|$)`
          [
            "^(assert|buffer|child_process|cluster|console|crypto|dgram|dns|domain|events|fs|http|https|module|net|os|path|punycode|querystring|readline|repl|stream|string_decoder|sys|timers|tls|tty|url|util|vm|zlib|freelist|v8|process|async_hooks|http2|perf_hooks)(/.*|$)"
          ],
          // Packages. `react` related packages come first.
          ["^react", "^@?\\w"],
          // Internal packages.
          [
            "^(@|@store|@resources|@components|@constants|@helpers|@hooks|@lib|vendored-lib)(/.*|$)"
          ],
          [
            "^(@|store|resources|components|constants|helpers|hooks|lib|vendored-lib)(/.*|$)"
          ],
          // Side effect imports.
          ["^\\u0000"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)\", \"^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // Style imports.
          ["^.+\\.s?css$"]
        ]
      }
    ],
    "no-use-before-define": "off",
    "semi": 0,
    "react/jsx-filename-extension": [1, { "extensions": [".ts", ".tsx"] }],
    "react/jsx-props-no-spreading": "off",
    "react/require-default-props": "off",
    "react/prop-types": "off",
    "react/no-array-index-key": ["warn"],
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": { "minProperties": 5, "multiline": true, "consistent": true },
        "ObjectPattern": { "minProperties": 5, "multiline": true, "consistent": true },
        "ImportDeclaration": { "multiline": true },
        "ExportDeclaration": { "minProperties": 5, "multiline": true, "consistent": true }
      }
    ],

    // typescript
    "@typescript-eslint/type-annotation-spacing": ["warn", { "after": true }],
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/array-type": ["error", { "default": "generic" }],
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      { "overrides": { "constructors": "off" } }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variableLike",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [],
        "classes": [],
        "interfaces": ["field", "constructor", "method"]
      }
    ],
    "@typescript-eslint/no-var-requires": "off"
  }
}
